<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.study.entity.Order">
        <!--@mbg.generated-->
        <!--@Table t_order-->
        <id column="order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="order_amount" jdbcType="DECIMAL" property="orderAmount"/>
        <result column="order_status" jdbcType="INTEGER" property="orderStatus"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        order_id, order_no, user_id, order_amount, order_status, remark
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from t_order
        where order_id = #{orderId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from t_order
        where order_id = #{orderId,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        insert into t_order (order_id, order_no, user_id,
        order_amount, order_status, remark
        )
        values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
        #{orderAmount,jdbcType=DECIMAL}, #{orderStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderAmount != null">
                #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        update t_order
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        update t_order
        set order_no = #{orderNo,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=BIGINT},
        order_amount = #{orderAmount,jdbcType=DECIMAL},
        order_status = #{orderStatus,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR}
        where order_id = #{orderId,jdbcType=BIGINT}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update t_order
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="order_no = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderNo,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="order_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderAmount,jdbcType=DECIMAL}
                </foreach>
            </trim>
            <trim prefix="order_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderStatus,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where order_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.orderId,jdbcType=BIGINT}
        </foreach>
    </update>

    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update t_order
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="order_no = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.orderNo != null">
                        when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderNo,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.userId != null">
                        when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.userId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="order_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.orderAmount != null">
                        when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderAmount,jdbcType=DECIMAL}
                    </if>
                </foreach>
            </trim>
            <trim prefix="order_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.orderStatus != null">
                        when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.orderStatus,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when order_id = #{item.orderId,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where order_id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.orderId,jdbcType=BIGINT}
        </foreach>
    </update>

    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into t_order
        (order_id, order_no, user_id, order_amount, order_status, remark)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orderId,jdbcType=BIGINT}, #{item.orderNo,jdbcType=VARCHAR}, #{item.userId,jdbcType=BIGINT},
            #{item.orderAmount,jdbcType=DECIMAL}, #{item.orderStatus,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <insert id="insertOrUpdate" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        insert into t_order
        (order_id, order_no, user_id, order_amount, order_status, remark)
        values
        (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
        #{orderAmount,jdbcType=DECIMAL}, #{orderStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
        )
        on duplicate key update
        order_id = #{orderId,jdbcType=BIGINT},
        order_no = #{orderNo,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=BIGINT},
        order_amount = #{orderAmount,jdbcType=DECIMAL},
        order_status = #{orderStatus,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR}
    </insert>

    <insert id="insertOrUpdateSelective" parameterType="com.study.entity.Order">
        <!--@mbg.generated-->
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderAmount != null">
                #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
</mapper>