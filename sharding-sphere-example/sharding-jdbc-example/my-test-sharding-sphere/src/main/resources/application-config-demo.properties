spring.application.name=my-test
spring.main.allow-bean-definition-overriding=true
# \u6240\u6709\u6570\u636E\u6E90\u540D\u79F0
sharding.jdbc.datasource.names=ds0,ds1
# \u6570\u636E\u6E901
sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.ds0.url=jdbc:mysql://127.0.0.1:3337/my-test0?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false
sharding.jdbc.datasource.ds0.username=root
sharding.jdbc.datasource.ds0.password=root
# \u6570\u636E\u6E902
sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.ds1.url=jdbc:mysql://127.0.0.1:3337/my-test1?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false
sharding.jdbc.datasource.ds1.username=root
sharding.jdbc.datasource.ds1.password=root
# t_user \u8868\u5206\u7247\u914D\u7F6E
sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=ds$->{0..1}.t_user_$->{0..1}
sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.sharding-column=gender
sharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user_$->{gender == 1 ? 1 : 0}
sharding.jdbc.config.sharding.tables.t_user.key-generator-column-name=user_id
sharding.jdbc.config.sharding.tables.t_user.key-generator-class-name=com.study.sharding.SnowflakeKeyGenerator
# t_user_address \u8868\u5206\u7247\u914D\u7F6E
sharding.jdbc.config.sharding.tables.t_user_address.actual-data-nodes=ds$->{0..1}.t_user_address_$->{0..1}
sharding.jdbc.config.sharding.tables.t_user_address.table-strategy.inline.sharding-column=gender
sharding.jdbc.config.sharding.tables.t_user_address.table-strategy.inline.algorithm-expression=t_user_address_$->{gender == 1 ? 0 : 1}
sharding.jdbc.config.sharding.tables.t_user_address.key-generator-column-name=address_id
sharding.jdbc.config.sharding.tables.t_user_address.key-generator-class-name=com.study.sharding.SnowflakeKeyGenerator
# t_order \u8868\u5206\u7247\u914D\u7F6E
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id
sharding.jdbc.config.sharding.tables.t_order.key-generator-class-name=com.study.sharding.SnowflakeKeyGenerator
# t_order_item \u8868\u5206\u7247\u914D\u7F6E
sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id
sharding.jdbc.config.sharding.tables.t_order_item.key-generator-class-name=com.study.sharding.SnowflakeKeyGenerator
# \u7ED1\u5B9A\u8868\u914D\u7F6E
sharding.jdbc.config.sharding.binding-tables[0]=t_user,t_user_address
sharding.jdbc.config.sharding.binding-tables[1]=t_order,t_order_item
# \u5E7F\u64AD\u8868\u914D\u7F6E
sharding.jdbc.config.sharding.broadcast-tables=t_product
# \u5206\u7247\u952E\u914D\u7F6E
sharding.jdbc.config.sharding.default-database-strategy.standard.sharding-column=user_id
# \u5206\u7247\u7B97\u6CD5\u914D\u7F6E
sharding.jdbc.config.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.study.sharding.IdShardingAlgorithm
# \u6253\u5370\u6267\u884C\u7684\u6570\u636E\u5E93\u4EE5\u53CA\u8BED\u53E5
sharding.jdbc.config.props.sql.show=true
# sql \u65E5\u5FD7
logging.level.com.study.mapper=debug
# mybatis \u914D\u7F6E
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.type-aliases-package=com.study.**.entity
mybatis.mapper-locations=classpath:mappers/*.xml
########################## \u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u914D\u7F6E ############################
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684 filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762 sql \u65E0\u6CD5\u7EDF\u8BA1\uFF0Cwall \u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,wall,log4j
# \u901A\u8FC7 connectProperties \u5C5E\u6027\u6765\u6253\u5F00 mergeSql \u529F\u80FD\u3001\u6162 SQL \u8BB0\u5F55
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1
# Spring \u76D1\u63A7\u914D\u7F6E\uFF0C\u8BF4\u660E\u8BF7\u53C2\u8003 Druid Github Wiki\uFF0C\u914D\u7F6E Druid \u548C Spring \u5173\u8054\u76D1\u63A7\u914D\u7F6E
spring.datasource.druid.aop-patterns=com.study.service.*
########################## WebStatFilter \u914D\u7F6E ############################
# \u542F\u7528 StatFilter
spring.datasource.druid.web-stat-filter.enabled=true
# \u6DFB\u52A0\u8FC7\u6EE4\u89C4\u5219
spring.datasource.druid.web-stat-filter.url-pattern=/*
# \u6392\u9664\u4E00\u4E9B\u4E0D\u5FC5\u8981\u7684 url
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# \u5F00\u542F session \u7EDF\u8BA1\u529F\u80FD
spring.datasource.druid.web-stat-filter.session-stat-enable=true
# \u7F3A\u7701 sessionStatMaxCount \u662F 1000 \u4E2A
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=session_name
spring.datasource.druid.web-stat-filter.principal-cookie-name=cookie_name
spring.datasource.druid.web-stat-filter.profile-enable=
############################ StatViewServlet \u914D\u7F6E ############################
# \u542F\u7528\u5185\u7F6E\u7684\u76D1\u63A7\u9875\u9762
spring.datasource.druid.stat-view-servlet.enabled=true
# \u5185\u7F6E\u76D1\u63A7\u9875\u9762\u7684\u5730\u5740
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# \u5173\u95ED Reset All \u529F\u80FD
spring.datasource.druid.stat-view-servlet.reset-enable=false
# \u8BBE\u7F6E\u767B\u5F55\u7528\u6237\u540D
spring.datasource.druid.stat-view-servlet.login-username=admin
# \u8BBE\u7F6E\u767B\u5F55\u5BC6\u7801
spring.datasource.druid.stat-view-servlet.login-password=admin
# \u767D\u540D\u5355(\u5982\u679C\u672A\u914D\u7F6E\u6216\u8005\u4E3A\u7A7A\uFF0C\u5219\u5141\u8BB8\u6240\u6709\u8BBF\u95EE)
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
# \u9ED1\u540D\u5355(deny \u4F18\u5148\u4E8E allow\uFF0C\u5982\u679C\u5728 deny \u5217\u8868\u4E2D\uFF0C\u5C31\u7B97\u5728 allow \u5217\u8868\u4E2D\uFF0C\u4E5F\u4F1A\u88AB\u62D2\u7EDD)
#spring.datasource.druid.stat-view-servlet.deny=

